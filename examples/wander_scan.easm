  ; Set movement to 50% forward
  stb 0x40, @move

loop:
  ; Scan forward.
  stb 0, @sensor_dir
  ldb $x0, @sensor_kind
  ldb $x1, @sensor_dist

  ceq $x2, $x0, 1      ; If sensor is not detecting robot,
  jmz $x2, @scan_right ; scan to the right.

  ; Otherwise, stop rotating and fire weapon.
  stb 0, @rotate
  stb 255, @weapon
  stb 0, @weapon
  jmp @loop

scan_right:
  stb 30, @sensor_dir
  ldb $x3, @sensor_kind
  ceq $x4, $x3, 1     ; If sensor is not detecting robot,
  jmz $x4, @scan_left ; scan to the left.

  ; Otherwise, rotate right.
  stb 127, @rotate
  jmp @loop

scan_left:
  stb -30, @sensor_dir
  ldb $x3, @sensor_kind
  ceq $x4, $x3, 1      ; If sensor is not detecting robot,
  jmz $x4, @wall_check ; check for a wall.

  ; Otherwise, rotate left.
  stb -128, @rotate
  jmp @loop

wall_check:
  ceq $x2, $x0, 2 ; If forward scan did not detect wall,
  jmz $x2, @loop  ; go back to start of loop.

  cltu $x2, $x1, 20 ; Check if distance to wall is less than threshold
  mul $x2, $x2, 128 ; Close to wall = 128. Otherwise = 0.
  stb $x2, @rotate  ; Rotate if close to wall.
  jmp @loop


sensor_dist@E000: .data 00
sensor_kind@E001: .data 00

move@F000: .data 00
rotate@F001: .data 00
weapon@F002: .data 00
sensor_dir@F003: .data 00
