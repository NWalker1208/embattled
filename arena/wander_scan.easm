setup:
  ; Set x8 to sensor kind value for robots
  ldib 1
  mov $x8, $ac

  ; Set x9 to sensor kind value for boundaries
  ldib 2
  mov $x9, $ac

  ; Set movement to 50% forward
  ldiw @move
  mov $x0, $ac
  ldib 64
  stmb $x0, 0

loop:
; scan forward
  ldiw @sensor_dir
  mov $x0, $ac
  ldib 0
  stmb $x0, 0

  ldiw @sensor_kind
  ldmb $ac, 0
  ceq $ac, $x9
  mov $x1, $ac

  ldiw @sensor_dist
  ldmb $ac, 0
  mov $x2, $ac

  ldiw @sensor_kind
  ldmb $ac, 0
  ceq $ac, $x8
  jmz @scan_left

; stop rotating
  ldiw @rotate
  mov $x0, $ac
  ldib 0
  stmb $x0, 0

; fire weapon
  ldiw @weapon
  mov $x0, $ac
  ldib 255
  stmb $x0, 0
  ldib 0
  stmb $x0, 0

scan_left:
  ldiw @sensor_dir
  mov $x0, $ac
  ldib 32
  stmb $x0, 0

  ldiw @sensor_kind
  ldmb $ac, 0
  ceq $ac, $x8
  jmz @scan_right

; rotate left
  ldiw @rotate
  mov $x0, $ac
  ldib 127
  stmb $x0, 0

scan_right:
  ldiw @sensor_dir
  mov $x0, $ac
  ldib 224
  stmb $x0, 0

  ldiw @sensor_kind
  ldmb $ac, 0
  ceq $ac, $x8
  jmz @wall_check

; rotate right
  ldiw @rotate
  mov $x0, $ac
  ldib 128
  stmb $x0, 0
  jmp @loop

wall_check:
  mov $ac, $x1
  jmz @end

  ldib 16
  cltu $x2, $ac
  mov $x1, $ac
  ldib 128
  mul $ac, $x1
  mov $x1, $ac

; rotate right or stop rotating
  ldiw @rotate
  mov $x0, $ac
  mov $ac, $x1
  stmb $x0, 0

end:
  jmp @loop


sensor_dist@E000: .data 00
sensor_kind@E001: .data 00

move@F000: .data 00
rotate@F001: .data 00
weapon@F002: .data 00
sensor_dir@F003: .data 00
