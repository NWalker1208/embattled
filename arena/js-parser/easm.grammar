@top Program { (Line (endOfLine Line )*)? }

Line { space? (
  Label (Instruction | Data)? Comment? |
  (Instruction | Data) Comment? |
  Comment
)? }

Label { (word address? | address) ':' space? }
Instruction { Mnemonic (space Operand (space? ',' space? Operand)*)? space? }
Data { '.data' (space hexByte)* space? }

Mnemonic { word }
Operand { register | immediateValue | labelReference }

@tokens {
  space { $[ \t]+ }
  endOfLine { '\n' }
  wordChar { $[0-9a-zA-Z_] }
  hexDigit { $[0-9a-fA-F] }
  
  hexValue { "0x" hexDigit+ }
  hexByte { hexDigit hexDigit }
  decValue { ('-' | '+')? @digit+ }

  word { wordChar+ }
  //name { $[a-zA-Z_] wordChar* }

  immediateValue { hexValue | decValue }
  labelReference { '@' word }
  register { '$' word }
  address { '@' hexDigit (hexDigit (hexDigit hexDigit?)?)? }

  Comment { ';' ![\n]* }
}
